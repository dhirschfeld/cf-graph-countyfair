{
 "PRed":[
  {
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.5"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/206246506.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Noarch",
    "migrator_version":0
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/212181183.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.0.6"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/254706014.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.0"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/393986662.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.2"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  },
  {
   "PR":{
    "__lazy_json__":"pr_json/420941380.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"2.0.3"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived":false,
 "bad":"Upstream: Could not find version on github",
 "conda-forge.yml":{},
 "feedstock_name":"cc-plugin-glider",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "home":"https://github.com/ioos/cc-plugin-glider",
   "license":"Apache-2.0",
   "license_file":"LICENSE.txt",
   "summary":"Compliance Checker Glider DAC plugin"
  },
  "build":{
   "entry_points":[
    "gliderdac = cc_plugin_glider.glider_dac:GliderCheck",
    "gliderdac = cc_plugin_glider.glider_dac:GliderCheck",
    "gliderdac = cc_plugin_glider.glider_dac:GliderCheck"
   ],
   "noarch":"python",
   "number":"0",
   "script":"-m pip install . -vv"
  },
  "extra":{
   "recipe-maintainers":[
    "benjwadams",
    "daf",
    "kwilcox",
    "lukecampbell",
    "ocefpaf",
    "benjwadams",
    "daf",
    "kwilcox",
    "lukecampbell",
    "ocefpaf",
    "benjwadams",
    "daf",
    "kwilcox",
    "lukecampbell",
    "ocefpaf"
   ]
  },
  "package":{
   "name":"cc-plugin-glider",
   "version":"2.0.3"
  },
  "requirements":{
   "host":[
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip"
   ],
   "run":[
    "python",
    "compliance-checker >=4.3.2",
    "python",
    "compliance-checker >=4.3.2",
    "python",
    "compliance-checker >=4.3.2"
   ]
  },
  "source":{
   "sha256":"fd1bf951fb4edc23e24d9eb5e15fc23f9cde5879d62c270bc1947c0edf43380e",
   "url":"https://github.com/ioos/cc-plugin-glider/archive/2.0.3.tar.gz"
  },
  "test":{
   "commands":[
    "pip check",
    "compliance-checker --list-tests | grep -q gliderdac",
    "pip check",
    "compliance-checker --list-tests | grep -q gliderdac",
    "pip check"
   ],
   "imports":[
    "cc_plugin_glider",
    "cc_plugin_glider",
    "cc_plugin_glider"
   ],
   "requires":[
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name":"cc-plugin-glider",
 "new_version":"2.0.3",
 "new_version_attempts":{
  "2.0.3":1
 },
 "new_version_errors":{},
 "pinning_version":"2020.05.20.09.40.28",
 "raw_meta_yaml":"{% set version = \"2.0.3\" %}\n\npackage:\n  name: cc-plugin-glider\n  version: {{ version }}\n\nsource:\n  url: https://github.com/ioos/cc-plugin-glider/archive/{{ version }}.tar.gz\n  sha256: fd1bf951fb4edc23e24d9eb5e15fc23f9cde5879d62c270bc1947c0edf43380e\n\nbuild:\n  number: 0\n  noarch: python\n  script: {{ PYTHON }} -m pip install . -vv\n  entry_points:\n    - gliderdac = cc_plugin_glider.glider_dac:GliderCheck\n\nrequirements:\n  host:\n    - python\n    - pip\n  run:\n    - python\n    - compliance-checker >=4.3.2\n\ntest:\n  imports:\n    - cc_plugin_glider\n  commands:\n    - compliance-checker --list-tests | grep -q gliderdac  # [not win]\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/ioos/cc-plugin-glider\n  license: Apache-2.0\n  license_file: LICENSE.txt\n  summary: Compliance Checker Glider DAC plugin\n\nextra:\n  recipe-maintainers:\n    - benjwadams\n    - daf\n    - kwilcox\n    - lukecampbell\n    - ocefpaf\n",
 "req":{
  "__set__":true,
  "elements":[
   "compliance-checker",
   "pip",
   "python"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "compliance-checker",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pip"
   ]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[
    "pip",
    "python"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[
    "compliance-checker >=4.3.2",
    "python"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[
    "pip"
   ]
  }
 },
 "url":"https://github.com/ioos/cc-plugin-glider/archive/2.0.0.tar.gz",
 "version":"2.0.3"
}