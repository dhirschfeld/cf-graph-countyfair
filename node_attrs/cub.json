{
 "PRed":[
  {
   "PR":{
    "__lazy_json__":"pr_json/420316696.json"
   },
   "data":{
    "bot_rerun":false,
    "migrator_name":"Version",
    "migrator_version":0,
    "version":"1.9.10"
   },
   "keys":[
    "bot_rerun",
    "migrator_name",
    "migrator_version",
    "version"
   ]
  }
 ],
 "archived":false,
 "bad":"Upstream: Could not find version on github",
 "conda-forge.yml":{},
 "feedstock_name":"cub",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"CUB provides state-of-the-art, reusable software components for every layer of the CUDA\nprogramming model:\n- Parallel primitives\n  - Warp-wide \"collective\" primitives\n    - Cooperative warp-wide prefix scan, reduction, etc.\n    - Safely specialized for each underlying CUDA architecture\n  - Block-wide \"collective\" primitives\n    - Cooperative I/O, sort, scan, reduction, histogram, etc.\n    - Compatible with arbitrary thread block sizes and types\n  - Device-wide primitives\n    - Parallel sort, prefix scan, reduction, histogram, etc.\n    - Compatible with CUDA dynamic parallelism\n- Utilities\n  - Fancy iterators\n  - Thread and thread block I/O\n  - PTX intrinsics\n  - Device, kernel, and storage management\n",
   "dev_url":"https://github.com/thrust/cub",
   "doc_url":"http://nvlabs.github.io/cub/",
   "home":"https://github.com/thrust/cub",
   "license":"BSD-3-Clause",
   "license_family":"BSD",
   "license_file":"LICENSE.TXT",
   "summary":"CUB is a flexible library of cooperative threadblock primitives and other utilities for CUDA\nkernel programming.\n"
  },
  "build":{
   "number":"2",
   "script":"mkdir -p \"$PREFIX\"/include && cp -r cub \"$PREFIX\"/include"
  },
  "extra":{
   "recipe-maintainers":[
    "rongou",
    "rongou",
    "rongou"
   ]
  },
  "package":{
   "name":"cub",
   "version":"1.9.10"
  },
  "requirements":{
   "run":[
    "thrust 1.9.10.*",
    "thrust 1.9.10.*",
    "thrust 1.9.10.*"
   ]
  },
  "source":{
   "sha256":"2bd7077a3d9741f0689e6c1eb58c6278fc96eccc27d964168bc8be1bc3a9040f",
   "url":"https://github.com/thrust/cub/archive/1.9.10.tar.gz"
  },
  "test":{
   "commands":[
    "if not exist \"%LIBRARY_INC%\"\\cub\\cub.cuh exit 1",
    "test -e \"$PREFIX\"/include/cub/cub.cuh",
    "test -e \"$PREFIX\"/include/cub/cub.cuh"
   ]
  }
 },
 "name":"cub",
 "new_version":"20.5",
 "new_version_attempts":{
  "1.9.10":1,
  "20.5":86
 },
 "new_version_errors":{
  "20.5":"The recipe did not change in the version migration, a URL did not hash, or there is jinja2 syntax the bot cannot handle!\n\nPlease check the URLs in your recipe with version '20.5' to make sure they exist!\n\nWe also found the following errors:\n\n - could not hash URL template 'https://github.com/thrust/cub/archive/{{ version }}.tar.gz'\n"
 },
 "pinning_version":"2020.05.19.13.30.35",
 "raw_meta_yaml":"{% set version = \"1.9.10\" %}\n{% set sha256 = \"2bd7077a3d9741f0689e6c1eb58c6278fc96eccc27d964168bc8be1bc3a9040f\" %}\n\npackage:\n  name: cub\n  version: {{ version }}\n\nsource:\n  url: https://github.com/thrust/cub/archive/{{ version }}.tar.gz\n  sha256: {{ sha256 }}\n\nbuild:\n  number: 2\n  script: mkdir -p \"$PREFIX\"/include && cp -r cub \"$PREFIX\"/include  # [not win]\n\nrequirements:\n  run:\n    - thrust {{ version }}.*\n\ntest:\n  commands:\n    - test -e \"$PREFIX\"/include/cub/cub.cuh  # [not win]\n    - if not exist \"%LIBRARY_INC%\"\\cub\\cub.cuh exit 1  # [win]\n\nabout:\n  home: https://github.com/thrust/cub\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: LICENSE.TXT\n  summary: |\n    CUB is a flexible library of cooperative threadblock primitives and other utilities for CUDA\n    kernel programming.\n  description: |\n    CUB provides state-of-the-art, reusable software components for every layer of the CUDA\n    programming model:\n    - Parallel primitives\n      - Warp-wide \"collective\" primitives\n        - Cooperative warp-wide prefix scan, reduction, etc.\n        - Safely specialized for each underlying CUDA architecture\n      - Block-wide \"collective\" primitives\n        - Cooperative I/O, sort, scan, reduction, histogram, etc.\n        - Compatible with arbitrary thread block sizes and types\n      - Device-wide primitives\n        - Parallel sort, prefix scan, reduction, histogram, etc.\n        - Compatible with CUDA dynamic parallelism\n    - Utilities\n      - Fancy iterators\n      - Thread and thread block I/O\n      - PTX intrinsics\n      - Device, kernel, and storage management\n  doc_url: http://nvlabs.github.io/cub/\n  dev_url: https://github.com/thrust/cub\n\nextra:\n  recipe-maintainers:\n    - rongou\n",
 "req":{
  "__set__":true,
  "elements":[
   "thrust"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "thrust"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "smithy_version":"No azure token. Create a token and\nput it in ~/.conda-smithy/azure.token\n3.7.3\n",
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[]
  },
  "host":{
   "__set__":true,
   "elements":[]
  },
  "run":{
   "__set__":true,
   "elements":[
    "thrust 1.9.10.*"
   ]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/thrust/cub/archive/1.9.8.zip",
 "version":"1.9.10"
}