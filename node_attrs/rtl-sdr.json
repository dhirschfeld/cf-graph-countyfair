{
 "archived":false,
 "bad":"Upstream: Could not find version on github",
 "conda-forge.yml":{
  "bot":{
   "automerge":true
  }
 },
 "feedstock_name":"rtl-sdr",
 "hash_type":"sha256",
 "meta_yaml":{
  "about":{
   "description":"DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the\nchip allows transferring the raw I/Q samples to the host, which is officially used\nfor DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric\nFry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\n",
   "dev_url":"https://osmocom.org/projects/rtl-sdr/repository",
   "doc_url":"https://osmocom.org/projects/rtl-sdr/wiki",
   "home":"https://osmocom.org/projects/rtl-sdr/wiki",
   "license":"GPL-2.0-or-later AND LGPL-2.1-or-later",
   "license_family":"GPL",
   "license_file":"COPYING",
   "summary":"Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver"
  },
  "build":{
   "number":"0",
   "run_exports":[
    "rtl-sdr",
    "rtl-sdr",
    "rtl-sdr"
   ]
  },
  "extra":{
   "recipe-maintainers":[
    "ryanvolz",
    "ryanvolz",
    "ryanvolz"
   ]
  },
  "package":{
   "name":"rtl-sdr",
   "version":"0.6.0"
  },
  "requirements":{
   "build":[
    "c_compiler_stub",
    "cmake",
    "ninja",
    "pkg-config",
    "c_compiler_stub",
    "cmake",
    "make",
    "pkg-config",
    "c_compiler_stub",
    "cmake",
    "cdt_stub",
    "make",
    "pkg-config"
   ],
   "host":[
    "libusb >=1",
    "pthreads-win32",
    "libusb >=1",
    "libusb >=1"
   ],
   "run":null
  },
  "source":{
   "patches":[
    "0001-Fixed-issues-compiling-on-Windows-with-MSVC.patch",
    "0001-Fixed-issues-compiling-on-Windows-with-MSVC.patch",
    "0001-Fixed-issues-compiling-on-Windows-with-MSVC.patch"
   ],
   "sha256":"ee10a76fe0c6601102367d4cdf5c26271e9442d0491aa8df27e5a9bf639cff7c",
   "url":"https://github.com/osmocom/rtl-sdr/archive/0.6.0.tar.gz"
  },
  "test":{
   "commands":[
    "setlocal EnableDelayedExpansion",
    "rtl_adsb -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "rtl_eeprom -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "rtl_fm -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "rtl_power -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "rtl_sdr -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "rtl_tcp -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "rtl_test -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr_export.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\bin\\\\rtlsdr.dll exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr.lib exit 1",
    "if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr_static.lib exit 1",
    "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "test -f $PREFIX/include/rtl-sdr.h",
    "test -f $PREFIX/include/rtl-sdr_export.h",
    "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}",
    "test -f $PREFIX/lib/librtlsdr.a",
    "rtl_adsb -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_eeprom -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_fm -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_power -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_sdr -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_tcp -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "rtl_test -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi",
    "test -f $PREFIX/include/rtl-sdr.h",
    "test -f $PREFIX/include/rtl-sdr_export.h",
    "test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}",
    "test -f $PREFIX/lib/librtlsdr.a"
   ]
  }
 },
 "name":"rtl-sdr",
 "new_version":"0.6.0",
 "raw_meta_yaml":"{% set name = \"rtl-sdr\" %}\n{% set version = \"0.6.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/osmocom/{{ name }}/archive/{{ version }}.tar.gz\n  sha256: ee10a76fe0c6601102367d4cdf5c26271e9442d0491aa8df27e5a9bf639cff7c\n  patches:\n    - 0001-Fixed-issues-compiling-on-Windows-with-MSVC.patch\n\nbuild:\n  number: 0\n  run_exports:\n    - {{ pin_subpackage('rtl-sdr', max_pin='x') }}\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - cmake\n    - {{ cdt('libudev-devel') }}  # [linux]\n    - make  # [not win]\n    - ninja  # [win]\n    - pkg-config\n  host:\n    - libusb >=1\n    - pthreads-win32  # [win]\n  run:\n    - pthreads-win32  # [win]\n\ntest:\n  commands:\n    # make it possible to check !ERRORLEVEL! after || on Windows\n    - setlocal EnableDelayedExpansion  # [win]\n\n    # verify that executables get installed\n    {% set cmds = [\n        \"rtl_adsb\",\n        \"rtl_eeprom\",\n        \"rtl_fm\",\n        \"rtl_power\",\n        \"rtl_sdr\",\n        \"rtl_tcp\",\n        \"rtl_test\",\n    ] %}\n    {% for cmd in cmds %}\n    - {{ cmd }} -h || ec=$?; if [ $ec -gt 1 ]; then exit $ec; fi  # [not win]\n    - {{ cmd }} -h || if !ERRORLEVEL! LEQ 1 cmd /c \"exit /b 0\"  # [win]\n    {% endfor %}\n\n    # verify that headers get installed\n    - test -f $PREFIX/include/rtl-sdr.h  # [not win]\n    - test -f $PREFIX/include/rtl-sdr_export.h  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr.h exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\rtl-sdr_export.h exit 1  # [win]\n\n    # verify that libraries get installed\n    - test -f $PREFIX/lib/librtlsdr${SHLIB_EXT}  # [not win]\n    - test -f $PREFIX/lib/librtlsdr.a  # [not win]\n    - if not exist %PREFIX%\\\\Library\\\\bin\\\\rtlsdr.dll exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr.lib exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\lib\\\\rtlsdr_static.lib exit 1  # [win]\n\nabout:\n  home: https://osmocom.org/projects/rtl-sdr/wiki\n  license: GPL-2.0-or-later AND LGPL-2.1-or-later\n  license_family: GPL\n  license_file: COPYING\n  summary: 'Library for using an Realtek RTL2832-based DVB dongle as an SDR receiver'\n  description: |\n    DVB-T dongles based on the Realtek RTL2832U can be used as a cheap SDR, since the\n    chip allows transferring the raw I/Q samples to the host, which is officially used\n    for DAB/DAB+/FM demodulation. The possibility of this has been discovered by Eric\n    Fry (http://rtlsdr.org/#history_and_discovery_of_rtlsdr).\n  doc_url: https://osmocom.org/projects/rtl-sdr/wiki\n  dev_url: https://osmocom.org/projects/rtl-sdr/repository\n\nextra:\n  recipe-maintainers:\n    - ryanvolz\n",
 "req":{
  "__set__":true,
  "elements":[
   "c_compiler_stub",
   "cdt_stub",
   "cmake",
   "libusb",
   "make",
   "ninja",
   "pkg-config",
   "pthreads-win32"
  ]
 },
 "requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "ninja",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "libusb",
    "pthreads-win32"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "strong_exports":false,
 "total_requirements":{
  "build":{
   "__set__":true,
   "elements":[
    "c_compiler_stub",
    "cdt_stub",
    "cmake",
    "make",
    "ninja",
    "pkg-config"
   ]
  },
  "host":{
   "__set__":true,
   "elements":[
    "libusb >=1",
    "pthreads-win32"
   ]
  },
  "run":{
   "__set__":true,
   "elements":[]
  },
  "test":{
   "__set__":true,
   "elements":[]
  }
 },
 "url":"https://github.com/osmocom/rtl-sdr/archive/0.6.0.tar.gz",
 "version":"0.6.0"
}